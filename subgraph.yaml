specVersion: 1.0.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: TokenFactory
    network: arbitrum-sepolia
    source:
      address: "0xd48570c834e2afcd1fd5c77d89a47907bdd37133"
      abi: TokenFactory
      startBlock: 108655285
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
        - TransferEvent
        - Account
        - AccountBalance
      abis:
        - name: TokenFactory
          file: ./abis/TokenFactory.json
      eventHandlers:
        - event: CreatedMemeToken(indexed address,indexed address,string,string)
          handler: handleCreatedMemeToken
        - event: BoughtMemeToken(indexed address,indexed address,uint256,uint256)
          handler: handleBoughtMemeToken
        - event: BoughtCrosschainMemeToken(indexed uint32,indexed address,indexed address,uint256,uint256)
          handler: handleBoughtCrosschainMemeToken
        - event: SoldMemeToken(indexed address,indexed address,uint256,uint256)
          handler: handleSoldMemeToken
        - event: SoldCrosschainMemeToken(indexed uint32,indexed address,indexed address,uint256,uint256)
          handler: handleSoldCrosschainMemeToken
      file: ./src/token-factory.ts
templates:
  # These data sources templates exist to support the different types that a specific erc20 token could be.
  - name: StandardToken
    kind: ethereum/contract
    network: arbitrum-sepolia
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/token.ts
      entities:
        - TransferEvent
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
